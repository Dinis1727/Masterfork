name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    name: Frontend (React)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node (cache)
        if: ${{ hashFiles('apps/frontend/package-lock.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: apps/frontend/package-lock.json
      - name: Setup Node (no cache)
        if: ${{ hashFiles('apps/frontend/package-lock.json') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install
        run: npm ci || npm install
      - name: Lint
        run: |
          if npm run | grep -q " lint"; then npm run lint; else echo "no lint script"; fi
      - name: Build
        run: npm run build
      - name: Test
        if: ${{ env.ACT != 'true' }}
        env:
          CI: true
        run: |
          if npm run | grep -q " test"; then npm test -- --watch=false; else echo "no test script"; fi

  backend:
    name: Backend (HTTP service)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node (cache)
        if: ${{ hashFiles('apps/backend/package-lock.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: apps/backend/package-lock.json
      - name: Setup Node (no cache)
        if: ${{ hashFiles('apps/backend/package-lock.json') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install
        run: npm ci || npm install
      - name: Lint
        run: |
          if [ -x node_modules/.bin/eslint ]; then npm run lint; else echo "no eslint installed, skipping"; fi
      - name: Test
        env:
          CI: true
        run: |
          if npm run | grep -q " test"; then npm test; else echo "no test script"; fi

  server:
    name: Server (Express + Prisma)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/server
    env:
      # Keep Prisma CLI happy without needing a DB in CI
      DATABASE_URL: file:./dev.db
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node (cache)
        if: ${{ hashFiles('apps/server/package-lock.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: apps/server/package-lock.json
      - name: Setup Node (no cache)
        if: ${{ hashFiles('apps/server/package-lock.json') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install
        run: npm ci || npm install
      - name: Generate Prisma Client
        run: |
          if npm run | grep -q "prisma:generate"; then npm run prisma:generate; else echo "no prisma generate"; fi
      - name: Lint
        run: |
          if npm run | grep -q " lint"; then npm run lint; else echo "no lint script"; fi
